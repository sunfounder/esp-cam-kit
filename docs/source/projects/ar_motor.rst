 .. note::

    Hallo, willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Vertiefen Sie sich mit anderen Enthusiasten in die Welt von Raspberry Pi, Arduino und ESP32.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Tutorials aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Sonderangebote**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Bereit, mit uns zu erkunden und zu kreieren? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _ar_motor:

2.6 Motoransteuerung
===========================

In diesem spannenden Projekt werden wir erkunden, wie man einen Motor mit dem L293D ansteuert.

Der L293D ist ein vielseitiger integrierter Schaltkreis (IC), der h√§ufig zur Motorsteuerung in Elektronik- und Robotikprojekten verwendet wird. Er kann zwei Motoren sowohl in Vorw√§rts- als auch in R√ºckw√§rtsrichtung antreiben und ist daher eine beliebte Wahl f√ºr Anwendungen, die eine pr√§zise Motorsteuerung erfordern.

Am Ende dieses fesselnden Projekts werden Sie ein umfassendes Verst√§ndnis daf√ºr gewonnen haben, wie digitale Signale und PWM-Signale effektiv zur Motorsteuerung genutzt werden k√∂nnen. Dieses wertvolle Wissen wird eine solide Grundlage f√ºr Ihre zuk√ºnftigen Unternehmungen in der Robotik und Mechatronik bilden. Machen Sie sich bereit, in die aufregende Welt der Motorsteuerung mit dem L293D einzutauchen!

**Ben√∂tigte Komponenten**

In diesem Projekt ben√∂tigen wir die folgenden Komponenten.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - KOMPONENTEN-BESCHREIBUNG
        - KAUFLINK

    *   - :ref:`cpn_esp32_wroom_32e`
        - |link_esp32_wroom_32e_buy|
    *   - :ref:`cpn_esp32_camera_extension`
        - \-
    *   - Steckbrett
        - |link_breadboard_buy|
    *   - Mehrere Verbindungskabel
        - |link_wires_buy|
    *   - Gleichstrommotor
        - |link_motor_buy|
    *   - L293D Motortreiber
        - \-

**Verf√ºgbare Pins**

Hier ist eine Liste der f√ºr dieses Projekt verf√ºgbaren Pins auf dem ESP32-Board.

.. list-table::
    :widths: 5 20 

    * - Verf√ºgbare Pins
      - IO13, IO14, IO27, IO26, IO25, IO33, IO32, IO15, IO2, IO0, IO4, IO5, IO18, IO19, IO21, IO22, IO23


**Schaltplan**

.. image:: img/circuit_4.1_motor_l293d.png


    
**Verdrahtung**

.. note:: 

  Da der Motor einen relativ hohen Strom ben√∂tigt, ist es notwendig, zuerst die Batterie einzusetzen und dann den Schalter auf dem Erweiterungsboard in die ON-Position zu schieben, um die Stromversorgung der Batterie zu aktivieren. 

.. image:: img/4.1_motor_l293d_bb.png



**Code**

#. Laden Sie diesen Code herunter oder kopieren Sie ihn direkt in die Arduino IDE.

.. note::

    * :ref:`unknown_com_port`
    
    
.. raw:: html
    
  <iframe src=https://create.arduino.cc/editor/sunfounder01/13364fc5-5094-4a84-90ce-07a5f85556dc/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>



Sobald der Code erfolgreich hochgeladen wurde, werden Sie beobachten, dass sich der Motor eine Sekunde lang im Uhrzeigersinn dreht, dann eine Sekunde lang gegen den Uhrzeigersinn und anschlie√üend eine zwei Sekunden lange Pause einlegt. Diese Abfolge von Aktionen wird in einer Endlosschleife fortgesetzt.


**Mehr erfahren**

Zus√§tzlich dazu, den Motor einfach im Uhrzeigersinn und gegen den Uhrzeigersinn drehen zu lassen, k√∂nnen Sie auch die Drehgeschwindigkeit des Motors steuern, indem Sie Pulsweitenmodulation (PWM) am Steuerpin verwenden, wie unten gezeigt.

.. note::

    * √ñffnen Sie die Datei ``4.1_motor_pwm.ino`` unter dem Pfad ``esp32-starter-kit-main\c\codes\4.1_motor_pwm``.
    * Nachdem Sie das Board (ESP32 Dev Module) und den entsprechenden Port ausgew√§hlt haben, klicken Sie auf die Schaltfl√§che **Upload**.
    * :ref:`unknown_com_port`
    
    
.. raw:: html

  <iframe src=https://create.arduino.cc/editor/sunfounder01/32c262fd-9975-4137-9973-8b62d7240fee/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>


Der vorherige Code setzt die beiden Pins des Motors direkt auf hohe oder niedrige Spannungspegel, um die Drehung und das Anhalten des Motors zu steuern.

Hier verwenden wir die |link_ledc| (LED-Steuerung) Peripherie, um PWM-Signale zu erzeugen, um die Drehgeschwindigkeit des Motors zu steuern. Durch zwei ``for``-Schleifen wird das Tastverh√§ltnis des Kanals A von 0 auf 255 erh√∂ht oder verringert, w√§hrend Kanal B auf 0 bleibt.

Auf diese Weise k√∂nnen Sie beobachten, wie der Motor seine Geschwindigkeit allm√§hlich auf 255 erh√∂ht und dann wieder auf 0 verringert, und dies in einer Endlosschleife.

Wenn Sie m√∂chten, dass sich der Motor in die entgegengesetzte Richtung dreht, tauschen Sie einfach die Werte von Kanal A und Kanal B.
